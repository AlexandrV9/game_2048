ARG NODE_VERSION=20
ARG CLIENT_PORT=3000

FROM node:${NODE_VERSION}-alpine AS base

WORKDIR /app

FROM base AS builder

# Copy package files
COPY package.json yarn.lock ./
COPY packages/client/package.json ./packages/client/

# Install dependencies
RUN yarn install --frozen-lockfile

# Copy source code
COPY . .

# Build client
RUN yarn build --scope=client

# Build server for SSR (using the correct script)
RUN cd packages/client && yarn build:server

FROM nginx:alpine AS production

# Copy nginx configuration
COPY packages/client/nginx.conf /etc/nginx/nginx.conf

# Copy built files
COPY --from=builder /app/packages/client/dist/ /usr/share/nginx/html/
COPY --from=builder /app/packages/client/server/ /usr/share/nginx/html/server/

# Copy server files for SSR
COPY --from=builder /app/packages/client/dist/server/ /usr/share/nginx/html/server/

# Create directories and set permissions for nginx
RUN mkdir -p /var/cache/nginx /var/log/nginx /run && \
    chown -R nginx:nginx /usr/share/nginx/html && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /etc/nginx/conf.d && \
    chown -R nginx:nginx /run

USER nginx

EXPOSE 80

HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:80/ || exit 1

CMD ["nginx", "-g", "daemon off;"]
